# DATA SOURCE
spring.jpa.database=mysql
spring.datasource.url=jdbc:mysql://${database-kube-srv}/phone_o_pedia?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.datasource.username=${database-user}
spring.datasource.password=${database-password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#in prod this property MUST be false to avoid performance issue
spring.jpa.open-in-view=false

# HIBERNATE
spring.jpa.properties.hibernate.proc.param_null_passing=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# FLYWAY
spring.flyway.enabled=false

## ACTUATOR
management.endpoint.configprops.enabled=true
management.endpoint.env.enabled=true
management.endpoint.health.enabled=true
management.endpoints.web.exposure.include=health,configprops,env
management.endpoint.health.status.order=fatal,down,out-of-service,unknown,up
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.health.db.enabled=true
management.health.kafka.enabled=true
management.endpoint.beans.cache.time-to-live=10s
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true

#KAFKA
#Kafka Producer
kafka.topic.producer.boot=${kafka-boot-producer}
#Kafka Producer local server
spring.kafka.producer.bootstrap-servers=${kafka-server}
#Kafka Producer serializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
#security.protocol=SSL
spring.kafka.properties.security.protocol=SSL
#ssl.endpoint.identification.algorithm=
spring.kafka.properties.[ssl.endpoint.identification.algorithm]=
#ssl.truststore.location
spring.kafka.producer.ssl.trust-store-location=file:${kafka-cert-location}
spring.kafka.producer.ssl.trust-store-password=${kafka-cert-password}
#2-way ssl with kafka
spring.kafka.producer.ssl.key-store-location=file:${subscriber-keystore-location}
spring.kafka.producer.ssl.key-store-password=${subscriber-keystore-password}
spring.kafka.producer.ssl.key-password=${subscriber-key-password}

#Log4j properties
logging.level.root=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} | %X{x-correlation-id} | %thread | %-5level | %logger{40} - %msg%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
logging.request.header.parameters=

#Spring Security properties
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration

#Authorisationproperties
authorized.readonlyaccess.channels=
#Netbank readwrite -user_managerment_admin is added for test purpose
authorized.readwriteaccess.channels=


#Enable application performance logs
performance.logging.enabled=true
